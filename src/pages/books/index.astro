---
import { getCollection } from 'astro:content';
import { formateLocalDate, formateLocalMonth } from '../../lib/utils';
import { Badge } from '../../components/ui/badge';
import IndexPageLayout from '../../layouts/IndexPageLayout.astro';
import {
  TableCell,
  TableRow,
  Table,
  TableHeader,
  TableHead,
  TableBody,
} from '../../components/ui/table';
import { ArrowRight, Star, Users, Book } from 'lucide-react';
import ContentTags from '../../components/ContentTags.astro';
import { Card, CardContent } from '@/components/ui/card';
import { StarRating } from '@/components/react/StarRating';

// const books = await getCollection('books');

// books.sort((a, b) => {
//   return new Date(b.data.startDate) - new Date(a.data.startDate);
// });

import { getBooks } from '@/lib/fetchBooks';

const books = await getBooks();
---

<IndexPageLayout
  title='Books I have listened'
  description='I like to listen to books—mostly mysteries, thriller romances, true crime, history, and IT. Who has time to read when you can just hit play and let someone else do the work? Here are some of the audiobooks I’ve powered through while pretending to be productive.'
  subTitle='Books'
>
  <div
    class='grid grid-cols-1 md:grid-cols-2 gap-4 justify-center items-center'
  >
    {
      books.slice(0, 10).map((book, index) => (
        <Card className='mb-4 flex flex-col h-full'>
          <CardContent className='pt-6 flex flex-col flex-grow justify-center'>
            <div class='flex justify-between items-start'>
              <div>
                <a
                  href={'/books/' + book.slug}
                  class='font-semibold text-lg hover:underline'
                >
                  {book.title}
                </a>
                <p class='text-sm text-gray-500'>{book.author}</p>
              </div>
              <a
                href={'/books/' + book.slug}
                class='text-primary hover:text-primary-dark'
              >
                <ArrowRight />
              </a>
            </div>
            <div class='flex justify-between mt-4'>
              <div>
                <p class='text-sm font-semibold'>My Rating</p>
                <StarRating rating={book.rating} />
              </div>
              <div>
                <p class='text-sm font-semibold'>Avg. Rating</p>
                <div class='flex items-center'>
                  <Users className='w-4 h-4 mr-1' />
                  {book.averageRating}
                </div>
              </div>
              <div>
                <p class='text-sm font-semibold'>Pages</p>
                <div class='flex items-center'>
                  <Book className='w-4 h-4 mr-1' />
                  {book.pages}
                </div>
              </div>
            </div>
            <div>
              {index == 0 && (
                <Badge className='w-fit' variant='secondary'>
                  Listening Now{' '}
                  <span class='relative flex h-3 w-3 ml-2'>
                    <span class='absolute inline-flex h-full w-full animate-ping rounded-full bg-green-400 opacity-75' />
                    <span class='relative inline-flex h-3 w-3 rounded-full bg-green-500' />
                  </span>
                </Badge>
              )}
            </div>
          </CardContent>
        </Card>
      ))
    }
  </div>
</IndexPageLayout>

<!-- <Table>
    <TableBody>
      {
        books.slice(0, 10).map((entry) => (
          <TableRow key={entry.slug}>
            <TableCell className='font-medium '>
              <div class='flex flex-col gap-1 min-w-20'>
                <a
                  href={'/books/' + entry.slug}
                  class={`font-semibold hover:font-extrabold ${entry?.slug ? 'text-primary' : 'text-foreground'}`}
                >
                  {entry.title}
                </a>
                <div class='mb-4 text-sm'>{entry.author}</div>
              </div>
            </TableCell>
            <TableCell>
              <div class='ml-4 flex p-2 flex-col gap-2  text-sm max-w-lg min-w-16 '>
                {/* {entry.data.company} */}

                {/* <ContentTags tags={entry.data.tags} /> */}
              </div>
            </TableCell>
            <TableCell>
              <a href={'/books/' + entry.slug}>
                <ArrowRight />
              </a>
            </TableCell>
          </TableRow>
        ))
      }
    </TableBody>
  </Table> -->
